spring:
  application:
    name: trainer-hours-service
  data:
    mongodb:
      uri: mongodb://localhost:27017/trainerdb
      auto-index-creation: true 
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: trainer-workload-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: "com.epam.trainingcommons.dto"
        spring.json.value.default.type: "com.epam.trainingcommons.dto.TrainerWorkloadRequest"
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

app:
  jwt:
    secret: hd72J#8!pzR@X5vmA6qTL*19ePfKzLbWuYxBVcN34

server:
  port: 8081 
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
topic:
  trainer-workload: trainer-workload-topic
  trainer-workload-dlq: trainer-workload-dlq-topic
  partitions: 1
  replicas: 1
